info:
  title: "negr-api"
  version: "1.0"
  description: "negr-blog"
  contact:
    email: "i7888@mail.ru"
paths:
  /api/auth/login:
    post:
      consumes:
      - multipart/form-data
      description: Выполняет вход в систему с указанием email и пароля
      parameters:
      - description: Email пользователя
        in: formData
        name: email
        required: true
        type: string
      - description: Пароль пользователя
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Токены доступа и обновления
          schema:
            type: string
        "403":
          description: Неверный логин или пароль
          schema:
            type: string
      summary: Вход в систему
      tags:
      - Аутентификация
  /api/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Обновляет токен доступа с помощью токена обновления
      parameters:
      - description: Токен обновления
        in: body
        name: refreshToken
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Новый токен доступа
          schema:
            type: string
        "400":
          description: Токен обновления недействителен
          schema:
            type: string
      summary: Обновление токена
      tags:
      - Аутентификация
  /api/auth/register:
    post:
      consumes:
      - multipart/form-data
      description: Регистрирует нового пользователя с указанными email, паролем и
        ролью
      parameters:
      - description: Email пользователя
        in: formData
        name: email
        required: true
        type: string
      - description: Пароль пользователя
        in: formData
        name: password
        required: true
        type: string
      - description: Роль пользователя (Author или Reader)
        in: formData
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Токены доступа и обновления
          schema:
            type: string
        "400":
          description: Неверный формат email
          schema:
            type: string
        "403":
          description: Email уже существует
          schema:
            type: string
      summary: Регистрация нового пользователя
      tags:
      - Аутентификация
  /api/posts:
    get:
      description: Возвращает список постов
      produces:
      - application/json
      responses:
        "200":
          description: Список постов
          schema:
            items:
              type: string
            type: array
      security:
      - bearerAuth: []
      summary: Получение списка постов
      tags:
      - Получение постов
    post:
      consumes:
      - multipart/form-data
      description: Создает новый пост с заголовком и содержимым
      parameters:
      - description: Уникальный ключ
        in: formData
        name: idempotencyKey
        required: true
        type: string
      - description: Заголовок поста
        in: formData
        name: title
        required: true
        type: string
      - description: Содержимое поста
        in: formData
        name: content
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Пост успешно создан
          schema:
            type: string
        "403":
          description: Пользователь не является автором
          schema:
            type: string
        "409":
          description: Уникальный ключ уже использовался
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Создание поста
      tags:
      - Управление постами
  /api/posts/{postId}:
    post:
      consumes:
      - multipart/form-data
      description: Редактирует пост по указанному идентификатору
      parameters:
      - description: Идентификатор поста
        in: path
        name: postId
        required: true
        type: integer
      - description: Новый заголовок поста
        in: formData
        name: title
        type: string
      - description: Новое содержимое поста
        in: formData
        name: content
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Пост успешно обновлен
          schema:
            type: string
        "403":
          description: Доступ запрещен
          schema:
            type: string
        "404":
          description: Пост не найден
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Редактирование поста
      tags:
      - Управление постами
  /api/posts/{postId}/images:
    post:
      consumes:
      - multipart/form-data
      description: Добавляет изображение к посту
      parameters:
      - description: Идентификатор поста
        in: path
        name: postId
        required: true
        type: integer
      - description: Изображение
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Картинка добавлена к посту
          schema:
            type: string
        "403":
          description: Доступ запрещен
          schema:
            type: string
        "404":
          description: Пост не найден
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Добавление картинки к посту
      tags:
      - Управление постами
  /api/posts/{postId}/images/{imageId}:
    delete:
      description: Удаляет изображение из поста по идентификатору
      parameters:
      - description: Идентификатор поста
        in: path
        name: postId
        required: true
        type: integer
      - description: Идентификатор картинки
        in: path
        name: imageId
        required: true
        type: integer
      responses:
        "200":
          description: Картинка успешно удалена
          schema:
            type: string
        "403":
          description: Доступ запрещён
          schema:
            type: string
        "404":
          description: Пост или картинка не найдены
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Удаление картинки из поста
      tags:
      - Управление постами
  /api/posts/{postId}/status:
    patch:
      consumes:
      - multipart/form-data
      description: Публикует пост по указанному идентификатору
      parameters:
      - description: Идентификатор поста
        in: path
        name: postId
        required: true
        type: integer
      - description: Статус поста (Published)
        in: formData
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Пост успешно опубликован
          schema:
            type: string
        "400":
          description: Неверное значение статуса
          schema:
            type: string
        "404":
          description: Пост не найден
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Публикация поста
      tags:
      - Управление постами
swagger: "2.0"
